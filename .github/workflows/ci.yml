name: ci

on:
- pull_request
- push

permissions:
  contents: read

jobs:
  test:
    permissions:
      checks: write  # for coverallsapp/github-action to create new checks
      contents: read  # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
        - Node.js 0.10
        - Node.js 4.x
        - Node.js 6.x
        - Node.js 8.x
        - Node.js 10.x
        - Node.js 12.x
        - Node.js 14.x
        - Node.js 16.x
        - Node.js 17.x
        - Node.js 18.x
        - Node.js 19.x
        - Node.js 20.x
        - Node.js 21.x
        - Node.js 22.x
        - Node.js 23.x
        - Node.js 24.x

        include:
        - name: Node.js 0.10
          node-version: "0.10"
          npm-i: mocha@3.5.3 nyc@10.3.2 supertest@2.0.0

        - name: Node.js 4.x
          node-version: "4"
          npm-i: mocha@5.2.0 nyc@11.9.0 supertest@3.4.2

        - name: Node.js 6.x
          node-version: "6"
          npm-i: mocha@6.2.2 nyc@14.1.1

        - name: Node.js 8.x
          node-version: "8"
          npm-i: mocha@7.2.0 nyc@14.1.1

        - name: Node.js 10.x
          node-version: "10"
          npm-i: mocha@8.3.2

        - name: Node.js 12.x
          node-version: "12"

        - name: Node.js 14.x
          node-version: "14"

        - name: Node.js 16.x
          node-version: "16"

        - name: Node.js 17.x
          node-version: "17"

        - name: Node.js 18.x
          node-version: "18"

        - name: Node.js 19.x
          node-version: "19"

        - name: Node.js 20.x
          node-version: "20"

        - name: Node.js 21.x
          node-version: "21"

        - name: Node.js 22.x
          node-version: "22"

        - name: Node.js 23.x
          node-version: "23"

        - name: Node.js 24.x
          node-version: "24"

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: |
        if [[ "$(npm config get package-lock)" == "true" ]]; then
          npm config set package-lock false
        else
          npm config set shrinkwrap false
        fi

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Setup Node.js version-specific dependencies
      shell: bash
      run: |
        # eslint for linting
        # - remove on Node.js < 10
        if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
          node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
            grep -E '^eslint(-|$)' | \
            sort -r | \
            xargs -n1 npm rm --silent --save-dev
        fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: |
        if npm -ps ls nyc | grep -q nyc; then
          npm run test-ci
        else
          npm test
        fi

    - name: Lint code
      if: steps.list_env.outputs.eslint != ''
      run: npm run lint

    - name: Collect code coverage
      uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # master
      if: steps.list_env.outputs.nyc != ''
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  coverage:
    permissions:
      checks: write  # for coverallsapp/github-action to create new checks
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload code coverage
      uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
